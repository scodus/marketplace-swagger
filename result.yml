openapi: 3.0.0
info:
  title: Marketplace Admin Swagger
  description: Swagger
  version: '1.0'
  x-logo:
    url: https://github.com/joolfe/logoBanner.png
    backgroundColor: '#FFFFFF'
    altText: logo
  termsOfService: '#'
  license:
    name: MIT
    url: https://es.wikipedia.org/wiki/Licencia_MIT
servers:
  - url: http://{{url}}
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
    noauthAuth:
      type: http
      scheme: noauth
tags:
  - name: Admin Dashboard
  - name: Admin Dashboard > Auth
  - name: Admin Dashboard > Account Office
  - name: Admin Dashboard > Company
  - name: Admin Dashboard > Users
  - name: Admin Dashboard > Parameter
  - name: Admin Dashboard > Packages
  - name: Admin Dashboard > Profiles
  - name: Admin Dashboard > Miscellaneous
  - name: AO Dashboard
  - name: AO Dashboard > Auth
  - name: AO Dashboard > My office
  - name: AO Dashboard > Accountatnt Profile
  - name: AO Dashboard > Users
  - name: AO Dashboard > Package
  - name: AO Dashboard > Company
  - name: Marketplace
  - name: Marketplace > Auth
  - name: Public
paths:
  /api/admin/login:
    post:
      tags:
        - Admin Dashboard > Auth
      summary: Login
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                email: superadmin@admin.com
                password: P@ssw0rd
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/refresh:
    post:
      tags:
        - Admin Dashboard > Auth
      summary: Refresh
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                refresh_token: >-
                  def50200bfcb5b34199e56a98562af8af9251646fa6535e60bf8949543f4695553e1913754f79965ab14852328dcd8146505e40f45735ac25a582685edcb1dca493daf4a297d407c48efc44ec9587a39f615aa613ebd1b075f9deb81ae4445d46c38ccaa9a2fe6d35eeb2540f33b727db6317cab927fc217e0823bf8187034240939bfa90ac404deb0ae38e7de3b21b80c9741d40ab0046e1615c29b492e6bdd6acf5a04b8ad9dd9462cc5fd1ce32e87238a770fb4c63b3d5ad1c1cd88c3216973ab69b23704e56969408572ad4075dd5df0623f68dc9ac7a4cefbc9993f8282f2190307bb4c00e69ac8da54f21d2913b053684d1489f51d25f842773cab8a46760ee3a020fd53f33fab7d1db96b84d18b3f7311510096324973ffcd07e519cfd4ad8a0786e307a49591ab6c6483bcafd3fd9849c75302b1026a1f56c862fa9c6811ae00cec22859f59728cce482c1bab9dcf7f4f57a3cb52819c80be9bf0c7d1147af38
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/password-reset:
    post:
      tags:
        - Admin Dashboard > Auth
      summary: Forgot Password
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                email: email
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/password-reset/change:
    post:
      tags:
        - Admin Dashboard > Auth
      summary: Reset Password
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                new_password: P@ssw0rd
                new_password_confirmation: P@ssw0rd
                token: Cr9kGdy17HPpiTJnSzh8
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/account-office:
    get:
      tags:
        - Admin Dashboard > Account Office
      summary: List Accounting Office
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          schema:
            type: integer
          example: '1'
        - name: perPage
          in: query
          schema:
            type: integer
          example: '20'
        - name: name
          in: query
          schema:
            type: string
        - name: email
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - Admin Dashboard > Account Office
      summary: Create Account Office
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: office second
                email: office_second@mail.com
                short_name: office
                tax_id: 12356
                regon: 13456
                bdo: 45677
                pkd: pkd
                krs: krs
                www: www
                is_tax_adviser: 1
                is_current_review: 0
                nr_mf: abc
                phone_number: '123412'
                addresses:
                  country: Nepal
                  city: Kathmandu
                  zip: '9800'
                  post: p1
                  street: street 1
                  district: district 1
                  county: county 1
                  house_number: h 123
                  no_of_premises: pr 4
                  voivodeship: voivo 2
                user_name: test office
                user_email: secondOffice@gmail.com
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/accounting-office/{slug}/admin:
    put:
      tags:
        - Admin Dashboard > Account Office
      summary: Change Accounting Office Admin
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                user_name: test rename 2
                user_email: testOffice2@gmail.com
      security:
        - bearerAuth: []
      parameters:
        - name: slug
          in: path
          schema:
            type: string
          required: true
          example: office-second
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/company:
    get:
      tags:
        - Admin Dashboard > Company
      summary: List Companies
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: limit
          in: query
          schema:
            type: integer
          example: '10'
        - name: page
          in: query
          schema:
            type: integer
          example: '1'
        - name: name
          in: query
          schema:
            type: string
        - name: onboarding_status
          in: query
          schema:
            type: string
          example: new
        - name: process_status
          in: query
          schema:
            type: string
        - name: handover_status
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - Admin Dashboard > Company
      summary: Create Company
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: second comp
                short_name: def
                email: second@mail.com
                phone: +91 2142802
                addresses:
                  country: Poland
                  city: Warswa
                  zip: '9800'
                  post: p1
                  street: street 1
                  district: district 1
                  county: county 1
                  house_number: h 123
                  no_of_premises: pr 4
                  voivodeship: voivo 2
                user_name: second user
                user_email: seconduser@mail.com
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/company/{slug}:
    put:
      tags:
        - Admin Dashboard > Company
      summary: Update Company
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: second comp updated
                short_name: def
                tax_id: 456
                regon: regon
                bdo: bdo
                pkd: pkd
                krs: krs
                ceidg: null
                phone_number: phone
                is_small_company: 0
                email: seconds@mail.com
                created_at: '2023-07-19'
                addresses:
                  country: Polands
                  street: street 1
                  city: Warswas
                  zip: 9800s
                  post: p1s
                  house_number: h 123s
                  number_of_premises: null
                  district: district 1s
                  county: county 1s
                  voivodeship: voivo 2s
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: slug
          in: path
          schema:
            type: string
          required: true
          example: second-comp
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/company/{slug}/change-status:
    patch:
      tags:
        - Admin Dashboard > Company
      summary: Change Company Status
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                value: 0
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: slug
          in: path
          schema:
            type: string
          required: true
          example: company-4th
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/company/{slug}:
    get:
      tags:
        - Admin Dashboard > Company
      summary: Company Detail
      security:
        - noauthAuth: []
      parameters:
        - name: slug
          in: path
          schema:
            type: string
          required: true
          example: company-two-1
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/company/{company_id}/admin:
    put:
      tags:
        - Admin Dashboard > Company
      summary: Update company admin
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: Someone
                email: someuser@mail.com
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: company_id
          in: path
          schema:
            type: integer
          required: true
          example: '11'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/company/{slug}/change-stage-status:
    patch:
      tags:
        - AO Dashboard > Company
      summary: Change Company Stage Status Copy
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                type: process_status
                value: to_do
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: slug
          in: path
          schema:
            type: string
          required: true
          example: xyz
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/users:
    get:
      tags:
        - Admin Dashboard > Users
      summary: List Users
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/user:
    post:
      tags:
        - Admin Dashboard > Users
      summary: Create User
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                user_name: sam sith
                user_email: gibag77173@cdeter.com
                role: support
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/user/{user_id}:
    delete:
      tags:
        - Admin Dashboard > Users
      summary: Remove User
      security:
        - bearerAuth: []
      parameters:
        - name: user_id
          in: path
          schema:
            type: integer
          required: true
          example: '6'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/parameters:
    get:
      tags:
        - Admin Dashboard > Parameter
      summary: List Parameters
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/parameter:
    post:
      tags:
        - Admin Dashboard > Parameter
      summary: Create Parameters
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                title: No of documents
                type: basic
                code: ABC1234
                description: abc def ghi
                has_quantity: 1
                unit: null
                price_level_1: 100
                price_level_2: 200
                price_level_3: 300
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/parameter/{slug}:
    put:
      tags:
        - Admin Dashboard > Parameter
      summary: Update Parameter
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                title: Consulation hours
                code: ABC122
                description: abc def
                has_quantity: 1
                unit: hours
                price_level_1: 50
                price_level_2: 55
                price_level_3: 60
      security:
        - bearerAuth: []
      parameters:
        - name: slug
          in: path
          schema:
            type: string
          required: true
          example: consulation-hours
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Admin Dashboard > Parameter
      summary: Delete Parameter
      security:
        - bearerAuth: []
      parameters:
        - name: slug
          in: path
          schema:
            type: string
          required: true
          example: consulation-hours
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/packages:
    get:
      tags:
        - Admin Dashboard > Packages
      summary: List Packages
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/package:
    post:
      tags:
        - Admin Dashboard > Packages
      summary: Create Package
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                title: Basic
                description: abc def
                accounting_office_type: KPiR
                default_package: 1
                collective_invoice: 0
                promotion_rules: 0
                individual_package: 1
                price_list_level: 1
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/package/{slug}:
    put:
      tags:
        - Admin Dashboard > Packages
      summary: Update Pacakge
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                title: Basic
                description: abc def
                accounting_office_type: KPiR
                default_package: 1
                collective_invoice: 0
                promotion_rules: 0
                individual_package: 1
                price_list_level: 1
                upgrade_version: 1
      security:
        - bearerAuth: []
      parameters:
        - name: slug
          in: path
          schema:
            type: string
          required: true
          example: basic
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin Dashboard > Packages
      summary: Single Package
      security:
        - bearerAuth: []
      parameters:
        - name: slug
          in: path
          schema:
            type: string
          required: true
          example: platinum
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/package-price/{slug}:
    put:
      tags:
        - Admin Dashboard > Packages
      summary: Package Price
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                package_price: 100
                parameters:
                  - parameter_id: '1'
                    value: 11
      security:
        - bearerAuth: []
      parameters:
        - name: slug
          in: path
          schema:
            type: string
          required: true
          example: basic
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/profiles:
    get:
      tags:
        - Admin Dashboard > Profiles
      summary: List Accountant Profile
      security:
        - bearerAuth: []
      parameters:
        - name: is_dg
          in: query
          schema:
            type: boolean
          example: 'true'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/profile/{slug}:
    get:
      tags:
        - Admin Dashboard > Profiles
      summary: Accountant Profile Detail
      security:
        - bearerAuth: []
      parameters:
        - name: slug
          in: path
          schema:
            type: string
          required: true
          example: sam-billings
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/profile-companies/{slug}:
    get:
      tags:
        - Admin Dashboard > Profiles
      summary: SIngle Profile Companies
      security:
        - bearerAuth: []
      parameters:
        - name: slug
          in: path
          schema:
            type: string
          required: true
          example: sam-billings
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/profile-companies/{profile_slug}:
    post:
      tags:
        - Admin Dashboard > Profiles
      summary: Assign Company
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                package_slug: basic
                company_slug: second-comp-updated
      security:
        - bearerAuth: []
      parameters:
        - name: profile_slug
          in: path
          schema:
            type: string
          required: true
          example: sam-billings
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/profile-companies/{profile_slug}/{company_slug}:
    delete:
      tags:
        - Admin Dashboard > Profiles
      summary: Remove Assigned Company
      security:
        - bearerAuth: []
      parameters:
        - name: profile_slug
          in: path
          schema:
            type: string
          required: true
          example: sam-billings
        - name: company_slug
          in: path
          schema:
            type: string
          required: true
          example: second-comp-updated
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/profile-branches:
    get:
      tags:
        - Admin Dashboard > Miscellaneous
      summary: List Branches
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/profile-languages:
    get:
      tags:
        - Admin Dashboard > Miscellaneous
      summary: List Languages
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/company-dashboard-data:
    get:
      tags:
        - Admin Dashboard
      summary: Dashboard
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/accounting/login:
    post:
      tags:
        - AO Dashboard > Auth
      summary: Login
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                email: testOffice@gmail.com
                password: P@ssw0rd
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/accounting/refresh:
    post:
      tags:
        - AO Dashboard > Auth
      summary: Refresh
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                refresh_token: >-
                  def50200bfcb5b34199e56a98562af8af9251646fa6535e60bf8949543f4695553e1913754f79965ab14852328dcd8146505e40f45735ac25a582685edcb1dca493daf4a297d407c48efc44ec9587a39f615aa613ebd1b075f9deb81ae4445d46c38ccaa9a2fe6d35eeb2540f33b727db6317cab927fc217e0823bf8187034240939bfa90ac404deb0ae38e7de3b21b80c9741d40ab0046e1615c29b492e6bdd6acf5a04b8ad9dd9462cc5fd1ce32e87238a770fb4c63b3d5ad1c1cd88c3216973ab69b23704e56969408572ad4075dd5df0623f68dc9ac7a4cefbc9993f8282f2190307bb4c00e69ac8da54f21d2913b053684d1489f51d25f842773cab8a46760ee3a020fd53f33fab7d1db96b84d18b3f7311510096324973ffcd07e519cfd4ad8a0786e307a49591ab6c6483bcafd3fd9849c75302b1026a1f56c862fa9c6811ae00cec22859f59728cce482c1bab9dcf7f4f57a3cb52819c80be9bf0c7d1147af38
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/accounting/password-reset:
    post:
      tags:
        - AO Dashboard > Auth
      summary: Forgot Password
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                email: email
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/accounting/password-reset/change:
    post:
      tags:
        - AO Dashboard > Auth
      summary: Reset Password
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                new_password: P@ssw0rd
                new_password_confirmation: P@ssw0rd
                token: token
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/accounting/my-accounting-office:
    get:
      tags:
        - AO Dashboard > My office
      summary: My office
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    put:
      tags:
        - AO Dashboard > My office
      summary: Update office
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                slug: office-second
                name: office second up
                email: office_second@mail.com
                short_name: office
                tax_id: 12356
                regon: 13456
                bdo: 45677
                pkd: pkd
                krs: krs
                www: www
                is_tax_adviser: 1
                is_current_review: 0
                nr_mf: abc
                phone_number: '123412'
                addresses:
                  country: Nepal
                  city: Kathmandu
                  zip: '9800'
                  post: p1
                  street: street 1
                  district: district 1
                  county: county 1
                  house_number: h 123
                  no_of_premises: pr 4
                  voivodeship: voivo 2
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/accounting/profiles:
    get:
      tags:
        - AO Dashboard > Accountatnt Profile
      summary: List Profiles
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          schema:
            type: integer
          example: '1'
        - name: limit
          in: query
          schema:
            type: integer
          example: '10'
        - name: name
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/accounting/profile/{slug}:
    get:
      tags:
        - AO Dashboard > Accountatnt Profile
      summary: Profile Detail
      security:
        - bearerAuth: []
      parameters:
        - name: slug
          in: path
          schema:
            type: string
          required: true
          example: sam-billings
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    put:
      tags:
        - AO Dashboard > Accountatnt Profile
      summary: Update Profile
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: Sam
                surname: Billings
                title: mr
                accountant_email: sam.billing@mail.com
                phone: '+1234'
                experience: describe the experiences
                city: ktm
                postal_code: '44600'
                list_branch_supported: abc
                is_spzoo: true
                is_dg: false
                is_foundations: true
                is_cooperatives: false
                br_mf: abc
                is_tax_advisor: true
                is_fund_reviewer: false
                keywords: abcs
                branches:
                  - 1
                  - 2
                  - 3
                languages:
                  - 1
                  - 20
                max_occupancy: 10
      security:
        - bearerAuth: []
      parameters:
        - name: slug
          in: path
          schema:
            type: string
          required: true
          example: sam-billings
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/accounting/profile:
    post:
      tags:
        - AO Dashboard > Accountatnt Profile
      summary: Create Profile
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                accounting_office_id: '1'
                name: sam
                surname: billing
                title: mr
                accountant_email: sam.billing@mail.com
                phone: '+1234'
                experience: describe the experiences
                city: ktm
                postal_code: '44600'
                list_branch_supported: abc
                is_spzoo: true
                is_dg: false
                is_foundations: true
                is_cooperatives: false
                br_mf: abc
                is_tax_advisor: true
                is_fund_reviewer: false
                keywords: abcs
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/accounting/profile/{slug}/avatar:
    post:
      tags:
        - AO Dashboard > Accountatnt Profile
      summary: Update Avatar
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                _method:
                  type: string
                  example: put
                avatar:
                  type: string
                  format: binary
      security:
        - bearerAuth: []
      parameters:
        - name: slug
          in: path
          schema:
            type: string
          required: true
          example: sam-billings
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/accounting/profile/{slug}/assign-package:
    put:
      tags:
        - AO Dashboard > Accountatnt Profile
      summary: Assign Package
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                package_ids:
                  - 2
                  - 3
      security:
        - bearerAuth: []
      parameters:
        - name: slug
          in: path
          schema:
            type: string
          required: true
          example: sam-billings
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/accounting/users:
    get:
      tags:
        - AO Dashboard > Users
      summary: List Users
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/accounting/user:
    post:
      tags:
        - AO Dashboard > Users
      summary: Create User
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                user_name: abc
                user_email: radom.user@sparkroi.com
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/accounting/user/{user_id}:
    delete:
      tags:
        - AO Dashboard > Users
      summary: Create User Copy
      security:
        - bearerAuth: []
      parameters:
        - name: user_id
          in: path
          schema:
            type: integer
          required: true
          example: '7'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/accounting/packages:
    get:
      tags:
        - AO Dashboard > Package
      summary: List Package
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/accounting/package/{slug}:
    get:
      tags:
        - AO Dashboard > Package
      summary: Single Package
      security:
        - bearerAuth: []
      parameters:
        - name: slug
          in: path
          schema:
            type: string
          required: true
          example: platinum
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/accounting/companies:
    get:
      tags:
        - AO Dashboard > Company
      summary: List Companies
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          schema:
            type: integer
          example: '1'
        - name: limit
          in: query
          schema:
            type: integer
          example: '10'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/accounting/profile-company-assigned:
    get:
      tags:
        - AO Dashboard > Company
      summary: Company Assignments
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/accounting/company-dashboard-data:
    get:
      tags:
        - AO Dashboard
      summary: Dashboard Data
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/login:
    post:
      tags:
        - Marketplace > Auth
      summary: Login
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                email: testuser@mail.com
                password: P@ssw0rd
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/refresh:
    post:
      tags:
        - Marketplace > Auth
      summary: Refresh
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                refresh_token: >-
                  def50200bfcb5b34199e56a98562af8af9251646fa6535e60bf8949543f4695553e1913754f79965ab14852328dcd8146505e40f45735ac25a582685edcb1dca493daf4a297d407c48efc44ec9587a39f615aa613ebd1b075f9deb81ae4445d46c38ccaa9a2fe6d35eeb2540f33b727db6317cab927fc217e0823bf8187034240939bfa90ac404deb0ae38e7de3b21b80c9741d40ab0046e1615c29b492e6bdd6acf5a04b8ad9dd9462cc5fd1ce32e87238a770fb4c63b3d5ad1c1cd88c3216973ab69b23704e56969408572ad4075dd5df0623f68dc9ac7a4cefbc9993f8282f2190307bb4c00e69ac8da54f21d2913b053684d1489f51d25f842773cab8a46760ee3a020fd53f33fab7d1db96b84d18b3f7311510096324973ffcd07e519cfd4ad8a0786e307a49591ab6c6483bcafd3fd9849c75302b1026a1f56c862fa9c6811ae00cec22859f59728cce482c1bab9dcf7f4f57a3cb52819c80be9bf0c7d1147af38
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/password-reset:
    post:
      tags:
        - Marketplace > Auth
      summary: Forgot Password
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                email: testuser@mail.com
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/password-reset/change:
    post:
      tags:
        - Marketplace > Auth
      summary: Reset Password
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                new_password: P@ssw0rd
                new_password_confirmation: P@ssw0rd
                token: token
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/company-status:
    get:
      tags:
        - Public
      summary: Company Stage Status
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/profiles:
    get:
      tags:
        - Public
      summary: List Profiles
      parameters:
        - name: page
          in: query
          schema:
            type: integer
          example: '1'
        - name: limit
          in: query
          schema:
            type: integer
          example: '10'
        - name: branches[]
          in: query
          schema:
            type: integer
          example: '1'
        - name: languages[]
          in: query
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/branches:
    get:
      tags:
        - Public
      summary: List Branches
      parameters:
        - name: page
          in: query
          schema:
            type: integer
          example: '1'
        - name: perPage
          in: query
          schema:
            type: integer
          example: '10'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/languages:
    get:
      tags:
        - Public
      summary: List Languages
      parameters:
        - name: page
          in: query
          schema:
            type: integer
          example: '1'
        - name: perPage
          in: query
          schema:
            type: integer
          example: '10'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
